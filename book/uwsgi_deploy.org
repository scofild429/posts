#+TITLE: uwsgi deploy
#+OPTIONS: num:nil
#+STARTUP: overview
* Reference
- [[https://tonyteaches.tech/django-nginx-uwsgi-tutorial/][How to Set Up Django on Nginx with uWSGI]]
- [[https://medium.com/all-about-django/deploying-django-applications-in-production-with-uwsgi-and-nginx-78aac8c0f735][Deploying Django applications in production with uwsgi and nginx]]
- [[https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-20-04][How To Secure Nginx with Let's Encrypt on Ubuntu 20.04]]

* steps
** python manage.py runserver should work
** uwsgi
- install  not in virtual envirement
#+begin_src sh
  sudo apt-get install python3.8-dev
  sudo apt-get install python3.10-dev
  sudo apt-get install gcc
  sudo pip install uwsgi
#+end_src

- test
  #+begin_src sh
    uwsgi --http :8000 --module projectname.wsgi
  #+end_src
  go to 8000 port and check, if remote use port rediect
  #+begin_src sh
    ssh -L 8000:127.0.0.1:8000 username@ip
  #+end_src

- config: /etc/uwsgi/apps-avaiable/project.ini
  #+begin_src text
    [uwsgi]
    uid = ubuntu
    gid = ubuntu
    # full path to Django project's root directory
    chdir            = /home/udoms/microdomains/
    # Django's wsgi file
    module           = microdomains.wsgi
    # full path to python virtual env
    home             = /home/udoms/venv
    # enable uwsgi master process
    master          = true
    # maximum number of worker processes
    processes       = 10
    # the socket (use the full path to be safe
    socket          = /home/..../project.sock
    # socket permissions
    chmod-socket    = 666
    # clear environment on exit
    vacuum          = true
    # daemonize uwsgi and write messages into given log
    logto = /var/log/uwsgi/hpcproject.log
  #+end_src
- set the log directory
    #+begin_src text
      cd /var/log
      sudo mkdir -p uwsgi
      sudo chown -R ubuntu:ubuntu uwsgi/
    #+end_src
- test after configation
    #+begin_src text
      cd /etc/uwsgi/apps-available/
      uwsgi --ini movies.ini              
    #+end_src
check the log content with sudo tail -10f /var/log/uwsgi/project.log
if correct, enable it with soft link to apps-enable

** nginx
- username
  #+begin_src text
   # sudo vim /etc/nginx/nginx.conf
   user cloud;      # instead of www-data
            
  #+end_src

- nginx site-avaiable file 
#+begin_src tex
  upstream django {
      server unix:///home/..../project/project.sock;
  }

    server {
        listen  80;
        server_name DomainName DNS;
        charset     utf-8;
        # max upload size
        client_max_body_size 75M;
        location /media  {
            alias /home/..../project/media;
        }
        location /static {
            alias /home/..../project/static;
        }
        # Send all non-media requests to the Django server.
        location / {
            uwsgi_pass  django;
            include     /home/..../project/uwsgi_params;
        }
      }
#+end_src
- *be careful, the socket path should match*
- last line uwsgi_params is in the project root directory
 #+begin_src text
   uwsgi_param  QUERY_STRING       $query_string;
   uwsgi_param  REQUEST_METHOD     $request_method;
   uwsgi_param  CONTENT_TYPE       $content_type;
   uwsgi_param  CONTENT_LENGTH     $content_length;
   uwsgi_param  REQUEST_URI        $request_uri;
   uwsgi_param  PATH_INFO          $document_uri;
   uwsgi_param  DOCUMENT_ROOT      $document_root;
   uwsgi_param  SERVER_PROTOCOL    $server_protocol;
   uwsgi_param  REQUEST_SCHEME     $scheme;
   uwsgi_param  HTTPS              $https if_not_empty;
   uwsgi_param  REMOTE_ADDR        $remote_addr;
   uwsgi_param  REMOTE_PORT        $remote_port;
   uwsgi_param  SERVER_PORT        $server_port;
   uwsgi_param  SERVER_NAME        $server_name;
 #+end_src

 sudo ln -s source des
 - enable the nginx configation file and test a picture in media

** service
- create service file with sudo vim /etc/systemd/system/uwsgi.service

  #+begin_src text
    [Unit]
    Description=uWSGI Emperor service

    [Service]
    ExecStartPre=/bin/bash -c 'mkdir -p /run/uwsgi; chown ubuntu:ubuntu /run/uwsgi'
    ExecStart=/usr/local/bin/uwsgi --emperor /etc/uwsgi/apps-enabled
    Restart=always #make sure the server is running
    KillSignal=SIGQUIT
    Type=notify
    NotifyAccess=all
            
    [Install]
    WantedBy=multi-user.target
  #+end_src
*be careful for the path of uwsgi*
- start service and enable it
  #+begin_src sh
    sudo systemctl start uwsgi.
    sudo systemctl restart uwsgi.
    sudo systemctl enable uwsgi.
  #+end_src

* ssl
sudo certbot -d -d -d
